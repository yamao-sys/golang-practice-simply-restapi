◆migrationツールの選定
【選定基準】
・DB、テーブル、カラムの追加・変更・削除ができること(カラムのインデックスも)
・CLIでやりやすいこと
・できるだけ直SQL書かなくても良いようにしたい
・メンテナンスされていること
・バージョンアップで破壊的変更が起こらないこと
・日本語のナレッジが豊富であること

【選定】
・golang-migrate, sql-migrateは「できるだけ直SQL書かなくても良いようにしたい」以外は満たしている
・gormはダウングレードができないらしい
・sql-migrateはgolang-migrateよりもコマンドがシンプルで済む
・sql-migrateはステータスが見やすい

◆ORMの選定
【選定基準】
・できるだけ簡単に書ける
・クエリやeager loedなどが柔軟にできる
・メンテナンスされていること
・バージョンアップで破壊的変更が起こらないこと
・日本語のナレッジが豊富であること

【選定】
・GORMが代表的、SQLBoilerも同等。
・SQLBoilerはスキーマからコードを自動生成してくれるらしい→処理がGORMと比べてブラックボックス化されていないため挙動を把握しやすい
・SQLBoilerは実行時のリフレクションがないため、GORMと比べて高速

・sql-migrate使うとGORMとスキーマが重複する...
→ sql-migrateと併用するのSQLBoilerの方が良いかも. スキーマから自動生成してくれるらしいので。
